%ARTICLE{article,
%    KEY       = "AB",
%    AUTHOR    = "A. Ut and H. Or and Co Author",
    EDITOR    = "E.D.I. Thor and E. di Thor",
    ORGANIZATION = "Organization",
    TITLE     = "Title A: An Article",
    BOOKTITLE = "Booktitle",
    TYPE      = "Type",
    CHAPTER   = "II",
    EDITION   = "Second",
    YEAR      = "1987",
    MONTH     = "Month",
  noPAGES     = "1-999",
    EID       = "4",
    JOURNAL   = "Jounal",
    INSTITUTION = "Institution",
    SCHOOL    = "School",
    HOWPUBLISHED = "Howpublished",
    PUBLISHER = "Publisher",
    ADDRESS   = "Address",
    SERIES    = "Series",
    VOLUME    = "443",
    NUMBER    = "21",
    DOI       = "10.4204/EPTCS",
%    eprint    = "2042.12345",
%  noURL       = "https://ntrs.nasa.gov/citations/20205011579",
%    NOTE      = "Note"}

@article{de1999conjunctive,
  TITLE="Conjunctive partial deduction: Foundations, control, algorithms, and experiments",
  AUTHOR="De Schreye, Danny and Gl{\"u}ck, Robert and J{\o}rgensen, Jesper and Leuschel, Michael and Martens, Bern and S{\o}rensen, Morten Heine",
  JOURNAL="The Journal of Logic Programming",
  VOLUME="41",
  NUMBER="2-3",
  noPAGES="231-277",
  YEAR="1999",
  PUBLISHER="Elsevier", 
  DOI="10.1016/S0743-1066(99)00030-8"
}

@article{verbitskaia2024conversion,
  TITLE="A Case Study in Functional Conversion and Mode Inference in miniKanren",
  AUTHOR="Ekaterina Verbitskaia, Igor Engel, Daniil Berezun",
  JOURNAL="PEPM 2024: Proceedings of the 2024 ACM SIGPLAN International Workshop on Partial Evaluation and Program Manipulation", 
  YEAR="2024",
  noPAGES="107–118",
  PUBLISHER="Association for Computing Machinery, New York, NY, United States",
  DOI="10.1145/3635800.3636966"
}

%% 2023

@inproceedings{lozov2019relational,
  title={Relational interpreters for search problems},
  author={Lozov, Petr and Verbitskaia, Ekaterina and Boulytchev, Dmitry},
  booktitle={Relational Programming Workshop},
  pages={43},
  year={2019}
}

@inproceedings{lozov2018typed,
  title={Typed relational conversion},
  author={Lozov, Petr and Vyatkin, Andrei and Boulytchev, Dmitry},
  booktitle={Trends in Functional Programming: 18th International Symposium, TFP 2017, Canterbury, UK, June 19-21, 2017, Revised Selected Papers 18},
  pages={39--58},
  year={2018},
  organization={Springer}
}

@inproceedings{verbitskaia2022direction,
  title={On a Direction-Driven Functional Conversion},
  author={Verbitskaia, Ekaterina and Berezun, Daniil and Boulytchev, Dmitry},
  booktitle={Relational Programming Workshop},
  year={2022}
}

@InProceedings{SemanticsModifiers1,
    author="Abramov, Sergei
    and Gl{\"u}ck, Robert",
    editor="Kapoor, Sanjiv
    and Prasad, Sanjiva",
    title="Combining Semantics with Non-standard Interpreter Hierarchies",
    booktitle="FST TCS 2000: Foundations of Software Technology and Theoretical Computer Science",
    year="2000",
    publisher="Springer Berlin Heidelberg",
    address="Berlin, Heidelberg",
    pages="201--213",
    abstract="This paper reports on results concerning the combination of non-standard semantics via interpreters. We define what a semantics combination means and identify under which conditions a combination can be realized by computer programs (robustness, safely combinable). We develop the underlying mathematical theory and examine the meaning of several non-standard interpreter towers. Our results suggest a technique for the implementation of a certain class of programming language dialects by composing a hierarchy of non-standard interpreters.",
    isbn="978-3-540-44450-3"
}

@Inbook{RevURA,
    author="Abramov, Sergei
    and Gl{\"u}ck, Robert",
    editor="Mogensen, Torben {\AE}.
    and Schmidt, David A.
    and Sudborough, I. Hal",
    title="Principles of Inverse Computation and the Universal Resolving Algorithm",
    bookTitle="The Essence of Computation: Complexity, Analysis, Transformation",
    year="2002",
    publisher="Springer Berlin Heidelberg",
    address="Berlin, Heidelberg",
    pages="269--295",
    abstract="We survey fundamental concepts in inverse programming and present the Universal Resolving Algorithm (URA), an algorithm for inverse computation in a first-order, functional programming language. We discuss the principles behind the algorithm, including a three-step approach based on the notion of a perfect process tree, and demonstrate our implementation with several examples. We explain the idea of a semantics modifier for inverse computation which allows us to perform inverse computation in other programming languages via interpreters.",
    isbn="978-3-540-36377-4",
    doi="10.1007/3-540-36377-7_13",
    url="https://doi.org/10.1007/3-540-36377-7_13"
}

@inproceedings{Untagged,
    author       = {Byrd, William E. and
                    Holk, Eric and
                    Friedman, Daniel P.},
    title        = {MiniKanren, Live and Untagged: Quine Generation
                    via Relational Interpreters (Programming Pearl)},
    year         = {2012},
    publisher    = {Association for Computing Machinery},
    address      = {New York, NY, USA},
    pages        = {8–-29},
    location     = {Copenhagen, Denmark},
    booktitle    = {Proceedings of the Annual Workshop on Scheme and
                    Functional Programming},
    series       = {Scheme '12},
    url          = {https://doi.org/10.1145/2661103.2661105},
}

@article{somogyi1996execution,
  title={The execution algorithm of Mercury, an efficient purely declarative logic programming language},
  author={Somogyi, Zoltan and Henderson, Fergus and Conway, Thomas},
  journal={The Journal of Logic Programming},
  volume={29},
  number={1-3},
  pages={17--64},
  year={1996},
  publisher={Elsevier}
}

@article{verbitskaia2021empirical,
  title={An Empirical Study of Partial Deduction for miniKanren},
  author={Verbitskaia, Ekaterina and Berezun, Daniil and Boulytchev, Dmitry},
  journal={arXiv preprint arXiv:2109.02814},
  year={2021}
}

%% 2022

@Inbook{Abramov2002,
    author="Abramov, Sergei
    and Gl{\"u}ck, Robert",
    editor="Mogensen, Torben {\AE}.
    and Schmidt, David A.
    and Sudborough, I. Hal",
    title="Principles of Inverse Computation and the Universal Resolving Algorithm",
    bookTitle="The Essence of Computation: Complexity, Analysis, Transformation",
    year="2002",
    publisher="Springer Berlin Heidelberg",
    address="Berlin, Heidelberg",
    pages="269--295",
    abstract="We survey fundamental concepts in inverse programming and present the Universal Resolving Algorithm (URA), an algorithm for inverse computation in a first-order, functional programming language. We discuss the principles behind the algorithm, including a three-step approach based on the notion of a perfect process tree, and demonstrate our implementation with several examples. We explain the idea of a semantics modifier for inverse computation which allows us to perform inverse computation in other programming languages via interpreters.",
    isbn="978-3-540-36377-4",
    doi="10.1007/3-540-36377-7_13",
    url="https://doi.org/10.1007/3-540-36377-7_13"
}


@inproceedings{brassel2011kics2,
  title={KiCS2: A new compiler from Curry to Haskell},
  author={Bra{\ss}el, Bernd and Hanus, Michael and Peem{\"o}ller, Bj{\"o}rn and Reck, Fabian},
  booktitle={International Workshop on Functional and Constraint Logic Programming},
  pages={1--18},
  year={2011},
  organization={Springer}
}

@article{hanus2012search,
  title={Search strategies for functional logic programming},
  author={Hanus, Michael and Peem{\"o}ller, Bj{\"o}rn and Reck, Fabian},
  journal={Software Engineering 2012. Workshopband},
  year={2012},
  publisher={Gesellschaft f{\"u}r Informatik eV}
}

@inproceedings{lozov2017typed,
  title={Typed relational conversion},
  author={Lozov, Petr and Vyatkin, Andrei and Boulytchev, Dmitry},
  booktitle={International Symposium on Trends in Functional Programming},
  pages={39--58},
  year={2017},
  organization={Springer}
}

@incollection{abramov2002principles,
  title={Principles of inverse computation and the universal resolving algorithm},
  author={Abramov, Sergei and Gl{\"u}ck, Robert},
  booktitle={The essence of computation},
  pages={269--295},
  year={2002},
  publisher={Springer}
}

@article{abramov2001standard,
  title={From standard to non-standard semantics by semantics modifiers},
  author={Abramov, Sergei and Gl{\"u}ck, Robert},
  journal={International Journal of Foundations of Computer Science},
  volume={12},
  number={02},
  pages={171--211},
  year={2001},
  publisher={World Scientific}
}

@article{kiselyov2005backtracking,
  title={Backtracking, interleaving, and terminating monad transformers: (functional pearl)},
  author={Kiselyov, Oleg and Shan, Chung-chieh and Friedman, Daniel P and Sabry, Amr},
  journal={ACM SIGPLAN Notices},
  volume={40},
  number={9},
  pages={192--203},
  year={2005},
  publisher={ACM New York, NY, USA}
}

@Inproceedings{EPTCS341.5,
  author    = {Verbitskaia, Ekaterina and Berezun, Daniil and Boulytchev, Dmitry},
  year      = {2021},
  title     = {An Empirical Study of Partial Deduction for miniKanren},
  editor    = {Lisitsa, Alexei and Nemytykh, Andrei P.},
  booktitle = {{\rm Proceedings of the 9th International Workshop on}
               Verification and Program Transformation,
               {\rm Luxembourg, Luxembourg, 27th and 28th of March 2021}},
  series    = {Electronic Proceedings in Theoretical Computer Science},
  volume    = {341},
  publisher = {Open Publishing Association},
  pages     = {73-94},
  doi       = {10.4204/EPTCS.341.5},
}

@inproceedings{overton2002constraint,
  title={Constraint-based mode analysis of Mercury},
  author={Overton, David and Somogyi, Zoltan and Stuckey, Peter J},
  booktitle={Proceedings of the 4th ACM SIGPLAN international conference on Principles and practice of declarative programming},
  pages={109--120},
  year={2002}
}

@misc{verbitskaiabinding,
  title = {Binding-Time Analysis for miniKanren},
  author = {Verbitskaia, Ekaterina and Artemeva, Irina and Berezun, Daniil},
  note = {Workshop on Trends, Extensions, Applications and Semantics of Logic Programming},
  howpublished = {\url{https://www.coalg.org/tease-lp/files/2020/05/verbitskaia.pdf}},
  year = {2020}
}

% 2021

@InProceedings{nonleftmost,
  author={Albert, Elvira
  and Puebla, Germ{\'a}n
  and Gallagher, John P.},
  editor={Hill, Patricia M.},
  title={Non-leftmost Unfolding in Partial Evaluation of Logic Programs with Impure Predicates},
  booktitle={Logic Based Program Synthesis and Transformation},
  year={2006},
  publisher={Springer Berlin Heidelberg},
  address={Berlin, Heidelberg},
  pages={115--132},
  isbn={978-3-540-32656-4},
  doi={10.1007/11680093\_8}
}

@inproceedings{SCBE,
  author    = {Maximilian C. Bolingbroke and
               Simon L. Peyton Jones},
  editor    = {Jeremy Gibbons},
  title     = {Supercompilation by evaluation},
  booktitle = {Proceedings of the 3rd {ACM} {SIGPLAN} Symposium on Haskell, Haskell
               2010, Baltimore, MD, USA, 30 September 2010},
  pages     = {135--146},
  publisher = {{ACM}},
  year      = {2010},
  doi       = {10.1145/1863523.1863540},
  timestamp = {Tue, 06 Nov 2018 16:58:22 +0100},
  biburl    = {https://dblp.org/rec/conf/haskell/BolingbrokeJ10.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@article{bulyonkov84,
  author   = {Bulyonkov, Mikhail A.},
  title    = {Polyvariant Mixed Computation for Analyzer Programs},
  journal  = {Acta Informatica},
  year     = {1984},
  month    = {Dec},
  day      = {01},
  volume   = {21},
  number   = {5},
  pages    = {473-484},
  abstract = {A polyvariant mixed computation algorithm for low-level non-structured programs is presented. A subclass of so called analyser programs has been chosen for which all partial computation that becomes possible during mixed computation is defined over a finite domain of nonsuspended variables. This not only provides termination of mixed computation but allows also to embody in the residual program a control structure encoded in the data.},
  issn     = {1432-0525},
  doi      = {10.1007/BF00271642},
}

@inproceedings{byrd2012minikanren,
  title    = {miniKanren, Live and Untagged: Quine Generation via Relational Interpreters (Programming Pearl)},
  author   = {Byrd, William E. and Holk, Eric and Friedman, Daniel P.},
  booktitle= {Proceedings of the 2012 Annual Workshop on Scheme and Functional Programming},
  pages    = {8--29},
  year     = {2012},
  doi      = {10.1145/2661103.2661105}
}


@inproceedings{chin1993towards,
  author    = {Chin, Wei-Ngan},
  title     = {Towards an Automated Tupling Strategy},
  year      = {1993},
  isbn      = {0897915941},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  doi       = {10.1145/154630.154643},
  abstract  = {The tupling transformation strategy can be used to merge loops together by combining recursive calls and also to eliminate redundant calls for a class of programs. The clever (and difficult) step of this transformation strategy is to find an appropriate tuple of calls, called the eureka tuple, which would allow each set of calls to be computed recursively from its previous set. In many cases, this transformation can produce super-linear speedup.In this paper, we present an analysis method which could find eureka tuples for a wide range of functional programs. Our work extends that of a number of past techniques which have used dependency graphs of function calls for analysing redundancy patterns. Our main contribution is the use of appropriate call orderings based on recursion parameters to systematically search for eureka tuples in dependency graphs. They allow us to construct sequences of tuples, called the continuous sequences of tuples, whereby the existence of a matched pair of tuples in the sequence corresponds to a suitable eureka tuple.An extension of the basic analysis method which uses trees, instead of sequences, of tuples will also be presented. The basic and extended analysis methods will be shown to be applicable to a wide range of programs. They can be guaranteed to terminate by either bounding the search or by applying suitable restrictions on the class of applicable programs. The latter approach yields a safe automated procedure for tupling transformation.},
  booktitle  = {Proceedings of the 1993 ACM SIGPLAN Symposium on Partial Evaluation and Semantics-Based Program Manipulation},
  pages      = {119–-132},
  numpages   = {14},
  location   = {Copenhagen, Denmark},
  series     = {PEPM '93}
}

@BOOK{TheReasonedSchemer,
  author    = {Friedman, Daniel P. and Byrd, William E. and Kiselyov, Oleg},
  title     = {The Reasoned Schemer},
  year      = {2005},
  isbn      = {0262562146},
  publisher = {The MIT Press},
  doi       = {10.7551/mitpress/5801.001.0001}
}

@inproceedings{gallagher1993tutorial,
  title     = {Tutorial on Specialisation of Logic Programs},
  author    = {Gallagher, John P.},
  booktitle = {Proceedings of the 1993 ACM SIGPLAN Symposium on Partial Evaluation and Semantics-Based Program Manipulation},
  pages     = {88--98},
  doi       = {10.1145/154630.154640},
  year      = {1993},
  address   = {New York, NY, USA},
  location  = {Copenhagen, Denmark},
  series    = {PEPM '93}
}

@inproceedings{gluck1994partial,
  title        = {Partial Deduction and Driving are Equivalent},
  author       = {Gl{\"u}ck, Robert and S{\o}rensen, Morten Heine B.},
  booktitle    = {International Symposium on Programming Language Implementation and Logic Programming},
  pages        = {165--181},
  year         = {1994},
  organization = {Springer},
  doi          = {10.1007/3-540-58402-1_13},
  isbn         = {978-3-540-48695-4}
}

@inproceedings{hamilton2007distillation,
  title={Distillation: Extracting the Essence of Programs},
  author={Hamilton, Geoff W.},
  booktitle = {Proceedings of the 2007 ACM SIGPLAN Symposium on Partial Evaluation and Semantics-Based Program Manipulation},
  pages={61--70},
  year={2007},
  doi={10.1145/1244381.1244391},
  isbn = {9781595936202},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  location = {Nice, France},
  series = {PEPM '07}
}

@inproceedings{friedmanmukanren,
  title={$\mu$Kanren: A Minimal Functional Core for Relational Programming},
  author={Hemann, Jason and Friedman, Daniel P.},
  booktitle={Proceedings of the 2013 Workshop on Scheme and Functional Programming (Scheme'13)},
  year={2013},
  url={http://webyrd.net/scheme-2013/papers/HemannMuKanren2013.pdf}
}

@inproceedings{Higman52,
  author    = {Higman, Graham},
  title     = {Ordering by Divisibility in Abstract Algebras},
  booktitle = {Proceedings of the London Mathematical Society},
  volume    = {2},
  pages     = {326--336},
  year      = {1952},
  doi       = {10.1112/plms/s3-2.1.326}
}

%nodoi
@book{jonesbook,
  author    = {Jones, Neil D. and
               Gomard, Carsten K. and
               Sestoft, Peter},
  title     = {Partial Evaluation and Automatic Program Generation},
  series    = {Prentice Hall international series in computer science},
  publisher = {Prentice Hall, Inc},
  year      = {1993},
  isbn      = {978-0-13-020249-9},
  timestamp = {Fri, 08 Apr 2011 18:21:02 +0200},
  biburl    = {https://dblp.org/rec/books/daglib/0072559.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org},
  address  = {USA}
}

@inproceedings{TCES,
  author    = {Jonsson, Peter A. and Nordlander, Johan},
  editor    = {Siau{-}Cheng Khoo and
               Jeremy G. Siek},
  title     = {Taming Code Explosion in Supercompilation},
  booktitle = {Proceedings of the 20th ACM SIGPLAN Workshop on Partial Evaluation and Program Manipulation},
  pages     = {33--42},
  publisher = {Association for Computing Machinery},
  year      = {2011},
  doi       = {10.1145/1929501.1929507},
  timestamp = {Tue, 06 Nov 2018 16:57:57 +0100},
  biburl    = {https://dblp.org/rec/conf/pepm/JonssonN11.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org},
  address   = {New York, NY, USA},
  location = {Austin, Texas, USA},
  series = {PEPM '11}
}


@inproceedings{10.1145/1090189.1086390,
  author = {Kiselyov, Oleg and Shan, Chung-chieh and Friedman, Daniel P. and Sabry, Amr},
  title = {Backtracking, Interleaving, and Terminating Monad Transformers: (Functional Pearl)},
  year = {2005},
  isbn = {1595930647},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  doi = {10.1145/1086365.1086390},
  abstract = {We design and implement a library for adding backtracking computations to any Haskell monad. Inspired by logic programming, our library provides, in addition to the operations required by the MonadPlus interface, constructs for fair disjunctions, fair conjunctions, conditionals, pruning, and an expressive top-level interface. Implementing these additional constructs is easy in models of backtracking based on streams, but not known to be possible in continuation-based models. We show that all these additional constructs can be generically and monadically realized using a single primitive msplit. We present two implementations of the library: one using success and failure continuations; and the other using control operators for manipulating delimited continuations.},
  booktitle = {Proceedings of the Tenth ACM SIGPLAN International Conference on Functional Programming},
  pages = {192–-203},
  numpages = {12},
  keywords = {control delimiters, Prolog, streams, continuations, Haskell, logic programming},
  location = {Tallinn, Estonia},
  series = {ICFP '05}
}

@article{Kruskal60,
  ISSN = {00029947},
  author = {Kruskal, Joseph B.},
  journal = {Transactions of the American Mathematical Society},
  number = {2},
  pages = {210--225},
  publisher = {American Mathematical Society},
  title = {Well-Quasi-Ordering, The Tree Theorem, and Vazsonyi's Conjecture},
  volume = {95},
  year = {1960},
  doi = {10.2307/1993287}
}

@article{leuschel1997advanced,
  author = {Leuschel, Michael},
  title = {Advanced Techniques for Logic Program Specialisation},
  year = {1997},
  url = {https://lirias.kuleuven.be/retrieve/390873}
}

@inproceedings{leuschel1997ecce,
  title={The Ecce Partial Deduction System},
  author={Leuschel, Michael},
  booktitle={Proceedings of the ILPS'97 Workshop on Tools and Environments for (Constraint) Logic Programming, German Puebla, Universidad Politécnica de Madrid Tech. Rep. CLIP7/97.1},
  year={1997},
}

@article{leuschel2002logic,
  title={Logic Program Specialisation through Partial Deduction: Control Issues},
  author={Leuschel, Michael and Bruynooghe, Maurice},
  journal={Theory and Practice of Logic Programming},
  volume={2},
  number={4-5},
  pages={461--515},
  year={2002},
  publisher={Cambridge University Press},
  doi={10.1017/S147106840200145X}
}

@inproceedings{LeuschelEVCF06,
    author    = {Leuschel, Michael and Elphick, Dan and Varea, Mauricio and Craig, Stephen-John and Fontaine, Marc},
    editor    = {John Hatcliff and
                 Frank Tip},
    title     = {The Ecce and Logen Partial Evaluators and Their Web Interfaces},
    booktitle = {Proceedings of the 2006 ACM SIGPLAN Symposium on Partial Evaluation and Semantics-Based Program Manipulation},
    pages     = {88--94},
    publisher = {Association for Computing Machinery},
    year      = {2006},
    doi       = {10.1145/1111542.1111557},
    location = {Charleston, South Carolina},
    series = {PEPM '06},
    isbn = {1595931961},
    timestamp = {Tue, 06 Nov 2018 16:57:57 +0100},
    biburl    = {https://dblp.org/rec/conf/pepm/LeuschelEVCF06.bib},
    bibsource = {dblp computer science bibliography, https://dblp.org}
  }

@inproceedings{leuschel1996redundant,
  title={Redundant Argument Filtering of Logic Programs},
  author={Leuschel, Michael and S{\o}rensen, Morten Heine B.},
  booktitle={International Workshop on Logic Programming Synthesis and Transformation},
  pages={83--103},
  year={1996},
  organization={Springer},
  address = {Berlin, Heidelberg},
  isbn={978-3-540-68494-7},
  doi={10.1007/3-540-62718-9_6}
}

@article{leuschel2014fast,
  title={Fast Offline Partial Evaluation of Logic Programs},
  author={Leuschel, Michael and Vidal, Germ{\'a}n},
  journal={Information and Computation},
  volume={235},
  pages={70--97},
  year={2014},
  publisher={Elsevier},
  doi={10.1016/j.ic.2014.01.005}
}

@article{lloyd1991partial,
  title={Partial Evaluation in Logic Programming},
  author={Lloyd, John W. and Shepherdson, John C.},
  journal={The Journal of Logic Programming},
  volume={11},
  number={3-4},
  pages={217--242},
  year={1991},
  publisher={Elsevier},
  doi={10.1016/0743-1066(91)90027-M}
}

%nodoi

@inproceedings{SCHC,
  author    = {Mitchell, Neil and
               Runciman, Colin},
  editor    = {Olaf Chitil and
               Zolt{\'{a}}n Horv{\'{a}}th and
               Vikt{\'{o}}ria Zs{\'{o}}k},
  title     = {A Supercompiler for Core Haskell},
  booktitle = {Implementation and Application of Functional Languages, 19th International Workshop},
  address   = {Freiburg, Germany},
  series    = {Lecture Notes in Computer Science},
  volume    = {5083},
  pages     = {147--164},
  publisher = {Springer},
  year      = {2007},
  doi       = {10.1007/978-3-540-85373-2\_9},
  timestamp = {Tue, 14 May 2019 10:00:35 +0200},
  biburl    = {https://dblp.org/rec/conf/ifl/MitchellR07.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@book{muchnick1997advanced,
  title={Advanced Compiler Design Implementation},
  author={Muchnick, Steven},
  year={1997},
  publisher={Morgan kaufmann}
}

@inproceedings{pettorossi1984powerful,
  title={A Powerful Strategy for Deriving Efficient Programs by Transformation},
  author={Pettorossi, Alberto},
  booktitle={Proceedings of the 1984 ACM Symposium on LISP and Functional Programming},
  pages={273--281},
  year={1984},
  isbn = {0897911423},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  doi={10.1145/800055.802044},
  location = {Austin, Texas, USA},
  series = {LFP '84}
}

@inproceedings{rozplokhas2020certified,
  title={Certified Semantics for Relational Programming},
  author={Rozplokhas, Dmitry and Vyatkin, Andrey and Boulytchev, Dmitry},
  booktitle={Asian Symposium on Programming Languages and Systems},
  pages={167--185},
  year={2020},
  organization={Springer},
  editor={Oliveira, Bruno C. d. S.},
  publisher={Springer International Publishing},
  address={Cham},
  isbn={978-3-030-64437-6},
  doi={10.1007/978-3-030-64437-6_9}
}

@inproceedings{sorensen1998convergence,
  title={Convergence of Program Transformers in the Metric Space of Trees},
  author={S{\o}rensen, Morten Heine B.},
  booktitle={International Conference on Mathematics of Program Construction},
  pages={315--337},
  year={1998},
  organization={Springer},
  publisher={Springer Berlin Heidelberg},
  address={Berlin, Heidelberg},
  doi={10.1007/BFb0054297}
}

@article{soerensen1996positive,
  title={A Positive Supercompiler},
  author={S{\o}rensen, Morten Heine B. and Gl{\"u}ck, Robert and Jones, Neil D.},
  journal={Journal of functional programming},
  volume={6},
  number={6},
  pages={811--838},
  year={1996},
  publisher={Cambridge University Press},
  doi={10.1017/S0956796800002008}
}

@article{turchin1986concept,
  author = {Turchin, Valentin F.},
  title = {The Concept of a Supercompiler},
  year = {1986},
  issue_date = {July 1986},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  volume = {8},
  number = {3},
  issn = {0164-0925},
  doi = {10.1145/5956.5957},
  abstract = {A supercompiler is a program transformer of a certain type. It traces the possible generalized histories of computation by the original program, and compiles an equivalent program, reducing in the process the redundancy that could be present in the original program. The nature of the redundancy that can be eliminated by supercompilation may be various, e.g., some variables might have predefined values (as in partial evaluation), or the structure of control transfer could be made more efficient (as in lazy evaluation), or it could simply be the fact that the same variable is used more than once. The general principles of supercompilation are described and compared with the usual approach to program transformation as a stepwise application of a number of equivalence rules. It is argued that the language Refal serves the needs of supercompilation best. Refal is formally defined and compared with Prolog and other languages. Examples are given of the operation of a Refal supercompiler implemented at CCNY on an IBM/370.},
  journal = {ACM Transactions on Programming Languages and Systems},
  pages = {292–-325},
  numpages = {34}
}

@article{venken1988partial,
  title={A Partial Evaluation System for Prolog: Some Practical Considerations},
  author={Venken, Raf and Demoen, Bart},
  journal={New Generation Computing},
  volume={6},
  number={2-3},
  pages={279--290},
  year={1988},
  publisher={Springer},
  doi={10.1007/BF03037142}
}

@article{vidal2004cost,
  title={Cost-Augmented Partial Evaluation of Functional Logic Programs},
  author={Vidal, Germ{\'a}n},
  journal={Higher-Order and Symbolic Computation},
  volume={17},
  number={1},
  pages={7--46},
  year={2004},
  publisher={Springer},
  doi={10.1023/B:LISP.0000029447.02190.42}
}

@inproceedings{vidal2008trace,
  title={Trace Analysis for Predicting the Effectiveness of Partial Evaluation},
  author={Vidal, Germ{\'a}n},
  booktitle={International Conference on Logic Programming},
  pages={790--794},
  year={2008},
  organization={Springer},
  publisher={Springer Berlin Heidelberg},
  address={Berlin, Heidelberg},
  isbn={978-3-540-89982-2},
  doi={10.1007/978-3-540-89982-2\_78}
}

@InProceedings{hybrid,
  author={Vidal, Germ{\'a}n},
  editor={Alpuente, Mar{\'i}a},
  title={A Hybrid Approach to Conjunctive Partial Evaluation of Logic Programs},
  booktitle={Logic-Based Program Synthesis and Transformation},
  year={2011},
  publisher={Springer Berlin Heidelberg},
  address={Berlin, Heidelberg},
  pages={200--214},
  isbn={978-3-642-20551-4},
  doi={10.1007/978-3-642-20551-4\_13}
}

@article{deforestation,
  author    = {Philip Wadler},
  title     = {Deforestation: Transforming Programs to Eliminate Trees},
  journal   = {Theoretical Computer Science},
  volume    = {73},
  number    = {2},
  pages     = {231--248},
  year      = {1990},
  doi       = {10.1016/0304-3975(90)90147-A},
  timestamp = {Sun, 28 May 2017 13:20:05 +0200},
  biburl    = {https://dblp.org/rec/journals/tcs/Wadler90.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

